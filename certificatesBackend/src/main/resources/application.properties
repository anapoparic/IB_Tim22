spring.application.name=certificatesBackend
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=ana123
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=true
spring.jpa.show-sql=false
spring.sql.init.continue-on-error=true
spring.jpa.properties.hibernate.format_sql=true
spring.main.allow-circular-references=true
spring.jpa.properties.hibernate.jdbc.lob.non-contextual_creation=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
jwt.secret=korisnickoime

#https set up
server.port=8081
## The format used for the keystore. It could be set to JKS in case it is a JKS file
#server.ssl.key-store-type=PKCS12
## The path to the keystore containing the certificate
#server.ssl.key-store=classpath:keystores/keystore.p12
## The password used to generate the certificate
#server.ssl.key-store-password=admin123
## The alias mapped to the certificate
#server.ssl.key-alias=-admin
#server.ssl.enabled=true

server.ssl.key-store=classpath:keystores/https.jks
server.ssl.key-store-password=password
server.ssl.key-password=password
server.ssl.key-store-type=JKS







#trust certificate
trust.store = classpath:../certificatesFrontend/root.crt
#trust certificate password
trust.store.password = classpath:../certificatesFrontend/root_pk.pem



server.error.include-message=always